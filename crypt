#!/usr/bin/php
<?php
set_error_handler(function($a,$b,$c,$d){throw new ErrorException($b,0,$a,$c,$d);}, -1);
require './encrypt.php';

// Note: I just filed PHP bug #60997 for funky getopt optional argument handling. As a result, 'a' and 'v' must be treated as required, and if you omit a value when running this script they are parsed oddly. It was that or having "-a 'Author name'" not work right (it would have to be passed as "-a'Author name'")
$opt = getopt('a:bdehrsv:', array('help'));
$file = end($_SERVER['argv']);
$version = isset($opt['v']) ? $opt['v'] : null;
$author  = isset($opt['a']) ? $opt['a'] : '';
$bump    = isset($opt['b']);
$same    = isset($opt['s']);
// This order is specific: least chance of accidentally writing decrypted file in the event of CLI typo
if (isset($opt['h']) || isset($opt['help'])) {
	usage();
}
elseif (isset($opt['r'])) {
	rotate($file, $author, $bump, $version);
}
elseif (isset($opt['e'])) {
	encrypt($file, $author, $version);
}
elseif (isset($opt['d'])) {
	decrypt($file, $same, $version);
}
else {
	usage("Mode not specified");
}


function decrypt($file, $same, $version) {
	$path = EncryptedData::decrypt($file, $version);
	if ($same) {
		echo "Saved to $path\n";
		exit(0);
	}
	$newPath = EncryptedData::getPlaintextPathForVersion($file, EncryptedData::getNextVersion($file));
	if (rename($path, $newPath)) {
		echo "Saved to $newPath\n";
		exit(0);
	}
	echo "Internal error";
	exit(1);
}
function encrypt($file, $author, $version) {
	if (!$author && !$version) {
		usage("Author required to encrypt new version");
	}
	if (!$version) {
		$version = EncryptedData::prepNextVersion($file, $author);
	}
	if (EncryptedData::encrypt($file, $version)) {
		echo "Encryption successful.\n";
		exit(0);
	}
	echo "Error encrypting file.\n";
	exit(1);
}
function rotate($file, $author, $bump, $oldVersion) {
	$newVersion = EncryptedData::rotate($file, $author, $bump, $oldVersion);
	echo "Rotated '$file' to version $newVersion";
	if ($bump) {
		echo " and set as active";
	}
	echo ".\n";
	exit(0);
}


function usage($msg = '') {
	if ($msg) {
		echo $msg, "\n\n";
	}

	echo <<<USAGE
Usage:
    crypt [-bv] -a "Name" -r file
    crypt [-v] -a "Name" -e file
    crypt [-sv] -d file
    crypt -h

Modes:
    -r   Rotate: re-encrypt file with new version number
    -e   Encrypt: read plaintext file and write encrypted for execution
    -d   Decrypt: read encrypted file and write plaintext for editing

Options:
    -h, --help   Display this help screen and exit
    -v number    Modify file at version number
    -a author    Specify name of author (required for write operations)
    -b           Bump active version (only applies to -r)
    -s           Save to same version (only applies to -d)

USAGE;
	exit($msg ? 1 : 0);
}